on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

env:
  GCP_ENV: ${{ secrets.GCP_ENV }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GCP_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

jobs:
  plan:
    name: Planning Terraform - ${{ inputs.environment }}
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ env.GCP_CREDENTIALS }}"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Create Terraform State Bucket and enable Object versioning
        run: |-
          gsutil mb -p ${{ env.GCP_PROJECT }} -b off -l asia-northeast1 gs://${{ env.GCP_PROJECT }}-tfstate-files/ || true
          gsutil versioning set on gs://${{ env.GCP_PROJECT }}-tfstate-files/
          gsutil rm gs://${{ env.GCP_PROJECT }}-tfstate-files/default.tflock

      - name: Render TFVARS
        uses: nowactions/envsubst@v1
        with:
          input: ./config/${{ env.GCP_ENV }}.tfvars
          output: ./terraform.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8

      - name: Terraform Init
        id: init
        run: terraform init -reconfigure -backend=true -backend-config="bucket=${{ env.GCP_PROJECT }}-tfstate-files" -backend-config="credentials=$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan --var-file=./terraform.tfvars -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1